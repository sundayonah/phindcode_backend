// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/sundayonah/phindcode_backend/ent/post"
	"github.com/sundayonah/phindcode_backend/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescDescription is the schema descriptor for description field.
	postDescDescription := postFields[0].Descriptor()
	// post.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	post.DescriptionValidator = postDescDescription.Validators[0].(func(string) error)
	// postDescCategory is the schema descriptor for category field.
	postDescCategory := postFields[2].Descriptor()
	// post.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	post.CategoryValidator = postDescCategory.Validators[0].(func(string) error)
	// postDescUserID is the schema descriptor for user_id field.
	postDescUserID := postFields[4].Descriptor()
	// post.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	post.UserIDValidator = postDescUserID.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[5].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[6].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
	// post.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	post.UpdateDefaultUpdatedAt = postDescUpdatedAt.UpdateDefault.(func() time.Time)
}
